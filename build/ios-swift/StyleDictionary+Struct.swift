
//
// StyleDictionary+Struct.swift
//

// Do not edit directly
// Generated on Fri, 25 Nov 2022 11:16:59 GMT


import UIKit

internal struct StyleDictionaryStruct {
    internal static let alphaBlack100 = rgba(#000000, 0.21)
    internal static let alphaBlack200 = rgba(#000000, 0.29)
    internal static let alphaBlack25 = rgba(#000000, 0.05)
    internal static let alphaBlack300 = rgba(#000000, 0.37)
    internal static let alphaBlack400 = rgba(#000000, 0.46)
    internal static let alphaBlack50 = rgba(#000000, 0.13)
    internal static let alphaBlack500 = rgba(#000000, 0.54)
    internal static let alphaBlack600 = rgba(#000000, 0.64)
    internal static let alphaBlack700 = rgba(#000000, 0.73)
    internal static let alphaBlack800 = rgba(#000000, 0.83)
    internal static let alphaBlack900 = rgba(#000000, 0.94)
    internal static let alphaWhite100 = rgba(#FFFFFF, 0.21)
    internal static let alphaWhite200 = rgba(#FFFFFF, 0.29)
    internal static let alphaWhite25 = rgba(#FFFFFF, 0.05)
    internal static let alphaWhite300 = rgba(#FFFFFF, 0.37)
    internal static let alphaWhite400 = rgba(#FFFFFF, 0.46)
    internal static let alphaWhite50 = rgba(#FFFFFF, 0.13)
    internal static let alphaWhite500 = rgba(#FFFFFF, 0.54)
    internal static let alphaWhite600 = rgba(#FFFFFF, 0.64)
    internal static let alphaWhite700 = rgba(#FFFFFF, 0.73)
    internal static let alphaWhite800 = rgba(#FFFFFF, 0.83)
    internal static let alphaWhite900 = rgba(#FFFFFF, 0.94)
    internal static let borderRadius3xSmall = roundTo(roundTo(roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    internal static let borderRadius50 = 999999
    internal static let borderRadiusLarge = roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    internal static let borderRadiusMedium = roundTo(16 * 1.5 /2,0) *2
    internal static let borderRadiusRegular = 16
    internal static let borderRadiusScale = 1.5
    internal static let borderRadiusSmall = roundTo(16 / 1.5 / 2,0) *2
    internal static let borderRadiusXLarge = roundTo(roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    internal static let borderRadiusXSmall = roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    internal static let borderRadiusXxLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    internal static let borderRadiusXxSmall = roundTo(roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    internal static let borderWidth1 = 1
    internal static let borderWidth2 = 2
    internal static let borderWidth4 = 4
    internal static let boxShadowAxisLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowAxisLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisMedium1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowAxisMedium2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisMedium3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisRegular1 = roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2
    internal static let boxShadowAxisRegular2 = roundTo(roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisRegular3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisScale = 1.5
    internal static let boxShadowAxisSmall1 = roundTo(1.5 * 1 /2,0) *2
    internal static let boxShadowAxisSmall2 = roundTo(roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisSmall3 = roundTo(roundTo(roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisXLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowAxisXLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisXLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisXSmall1 = 1
    internal static let boxShadowAxisXSmall2 = roundTo(1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisXSmall3 = roundTo(roundTo(1 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisXxLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowAxisXxLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowAxisXxLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowBlurLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurMedium1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowBlurMedium2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurMedium3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurRegular1 = 1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2
    internal static let boxShadowBlurRegular2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurRegular3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurScale = 1.5
    internal static let boxShadowBlurSmall1 = 1.5*roundTo(1.5 * 1 /2,0) *2
    internal static let boxShadowBlurSmall2 = roundTo(1.5*roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurSmall3 = roundTo(roundTo(1.5*roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurXLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowBlurXLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurXLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurXSmall1 = 1.5*1
    internal static let boxShadowBlurXSmall2 = roundTo(1.5*1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurXSmall3 = roundTo(roundTo(1.5*1 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurXxLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    internal static let boxShadowBlurXxLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    internal static let boxShadowBlurXxLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    internal static let boxShadowColorDarkNeutral0 = #000000
    internal static let boxShadowColorDarkNeutral200 = #49494B
    internal static let boxShadowColorDarkNeutral25 = #0D0D10
    internal static let boxShadowColorDarkOnBackgroundInverseOpacity1 = 0.17
    internal static let boxShadowColorDarkOnBackgroundInverseOpacity2 = roundTo(0.57 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnBackgroundInverseOpacity3 = roundTo(roundTo(0.57 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnBackgroundOpacity1 = 1
    internal static let boxShadowColorDarkOnBackgroundOpacity2 = roundTo(0.18 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnBackgroundOpacity3 = roundTo(roundTo(0.18 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceHighEmphasisInverseOpacity1 = 0.22
    internal static let boxShadowColorDarkOnSurfaceHighEmphasisInverseOpacity2 = roundTo(0.23 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceHighEmphasisInverseOpacity3 = roundTo(roundTo(0.23 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceHighEmphasisOpacity1 = 0.22
    internal static let boxShadowColorDarkOnSurfaceHighEmphasisOpacity2 = roundTo(0.22 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceHighEmphasisOpacity3 = roundTo(roundTo(0.22 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceInverseOpacity1 = 0.20
    internal static let boxShadowColorDarkOnSurfaceInverseOpacity2 = roundTo(0.32 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceInverseOpacity3 = roundTo(roundTo(0.32 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceLowEmphasisInverseOpacity1 = 0.18
    internal static let boxShadowColorDarkOnSurfaceLowEmphasisInverseOpacity2 = roundTo(0.48 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceLowEmphasisInverseOpacity3 = roundTo(roundTo(0.48 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceLowEmphasisOpacity1 = 0.52
    internal static let boxShadowColorDarkOnSurfaceLowEmphasisOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceLowEmphasisOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceOpacity1 = 0.30
    internal static let boxShadowColorDarkOnSurfaceOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorDarkOnSurfaceOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightNeutral1000 = #000000
    internal static let boxShadowColorLightNeutral600 = #4E4E50
    internal static let boxShadowColorLightNeutral900 = #131316
    internal static let boxShadowColorLightOnBackgroundInverseOpacity1 = 0.57
    internal static let boxShadowColorLightOnBackgroundInverseOpacity2 = roundTo(0.57 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnBackgroundInverseOpacity3 = roundTo(roundTo(0.57 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnBackgroundOpacity1 = 0.18
    internal static let boxShadowColorLightOnBackgroundOpacity2 = roundTo(0.18 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnBackgroundOpacity3 = roundTo(roundTo(0.18 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceHighEmphasisInverseOpacity1 = 0.23
    internal static let boxShadowColorLightOnSurfaceHighEmphasisInverseOpacity2 = roundTo(0.23 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceHighEmphasisInverseOpacity3 = roundTo(roundTo(0.23 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceHighEmphasisOpacity1 = 0.22
    internal static let boxShadowColorLightOnSurfaceHighEmphasisOpacity2 = roundTo(0.22 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceHighEmphasisOpacity3 = roundTo(roundTo(0.22 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceInverseOpacity1 = 0.32
    internal static let boxShadowColorLightOnSurfaceInverseOpacity2 = roundTo(0.32 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceInverseOpacity3 = roundTo(roundTo(0.32 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceLowEmphasisInverseOpacity1 = 0.48
    internal static let boxShadowColorLightOnSurfaceLowEmphasisInverseOpacity2 = roundTo(0.48 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceLowEmphasisInverseOpacity3 = roundTo(roundTo(0.48 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceLowEmphasisOpacity1 = 0.19
    internal static let boxShadowColorLightOnSurfaceLowEmphasisOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceLowEmphasisOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceOpacity1 = 0.19
    internal static let boxShadowColorLightOnSurfaceOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    internal static let boxShadowColorLightOnSurfaceOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    internal static let boxShadowColorScale = 1.5
    internal static let boxShadowDarkOnBackgroundInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnBackgroundXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceHighEphasisXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceLowEmphasisXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowDarkOnSurfaceXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnBackgroundXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceHighEphasisXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceLowEmphasisXxLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceMedium = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceRegular = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceXLarge = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceXSmall = [object Object],[object Object],[object Object]
    internal static let boxShadowLightOnSurfaceXxLarge = [object Object],[object Object],[object Object]
    internal static let colorBaseGrayDark = UIColor(red: 0.067, green: 0.067, blue: 0.067, alpha: 1)
    internal static let colorBaseGrayLight = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let colorBaseGrayMedium = UIColor(red: 0.600, green: 0.600, blue: 0.600, alpha: 1)
    internal static let colorBaseGreen = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1)
    internal static let colorBaseRed = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let colorFontBase = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let colorFontSecondary = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1)
    internal static let colorFontTertiary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let darkPaletteBlue100 = #062F7C
    internal static let darkPaletteBlue200 = #0F42A3
    internal static let darkPaletteBlue25 = #000E26
    internal static let darkPaletteBlue300 = #1B57C7
    internal static let darkPaletteBlue400 = #3370E0
    internal static let darkPaletteBlue50 = #011E53
    internal static let darkPaletteBlue500 = #5388EC
    internal static let darkPaletteBlue600 = #75A2F5
    internal static let darkPaletteBlue700 = #99BBFA
    internal static let darkPaletteBlue800 = #BED4FD
    internal static let darkPaletteBlue900 = #EAF1FD
    internal static let darkPaletteCyan100 = #023A47
    internal static let darkPaletteCyan200 = #045064
    internal static let darkPaletteCyan25 = #000F13
    internal static let darkPaletteCyan300 = #07667F
    internal static let darkPaletteCyan400 = #0D7F9C
    internal static let darkPaletteCyan50 = #002730
    internal static let darkPaletteCyan500 = #1697B9
    internal static let darkPaletteCyan600 = #22B0D4
    internal static let darkPaletteCyan700 = #49C9E9
    internal static let darkPaletteCyan800 = #83E1F8
    internal static let darkPaletteCyan900 = #D7F6FE
    internal static let darkPaletteGreen100 = #133D00
    internal static let darkPaletteGreen200 = #1A5402
    internal static let darkPaletteGreen25 = #051100
    internal static let darkPaletteGreen300 = #246C04
    internal static let darkPaletteGreen400 = #2E8508
    internal static let darkPaletteGreen50 = #0D2701
    internal static let darkPaletteGreen500 = #399E0D
    internal static let darkPaletteGreen600 = #46B916
    internal static let darkPaletteGreen700 = #56D321
    internal static let darkPaletteGreen800 = #7EEB50
    internal static let darkPaletteGreen900 = #CEFEBA
    internal static let darkPaletteIndigo100 = #1E10A7
    internal static let darkPaletteIndigo200 = #3222D4
    internal static let darkPaletteIndigo25 = #070142
    internal static let darkPaletteIndigo300 = #503FE6
    internal static let darkPaletteIndigo400 = #6C5DF0
    internal static let darkPaletteIndigo50 = #120677
    internal static let darkPaletteIndigo500 = #867AF5
    internal static let darkPaletteIndigo600 = #A096F9
    internal static let darkPaletteIndigo700 = #B9B2FC
    internal static let darkPaletteIndigo800 = #D2CEFE
    internal static let darkPaletteIndigo900 = #F1EFFD
    internal static let darkPaletteMagenta100 = #620362
    internal static let darkPaletteMagenta200 = #830883
    internal static let darkPaletteMagenta25 = #1E011E
    internal static let darkPaletteMagenta300 = #A510A5
    internal static let darkPaletteMagenta400 = #C91DC9
    internal static let darkPaletteMagenta50 = #430143
    internal static let darkPaletteMagenta500 = #E53DE5
    internal static let darkPaletteMagenta600 = #F36CF3
    internal static let darkPaletteMagenta700 = #FA96FA
    internal static let darkPaletteMagenta800 = #FDBEFD
    internal static let darkPaletteMagenta900 = #FDEBFD
    internal static let darkPaletteMoss100 = #2B3A00
    internal static let darkPaletteMoss200 = #3B5002
    internal static let darkPaletteMoss25 = #1C2501
    internal static let darkPaletteMoss300 = #4D6604
    internal static let darkPaletteMoss400 = #607E07
    internal static let darkPaletteMoss50 = #1C2501
    internal static let darkPaletteMoss500 = #73960C
    internal static let darkPaletteMoss600 = #88AF13
    internal static let darkPaletteMoss700 = #9DC91C
    internal static let darkPaletteMoss800 = #B8E237
    internal static let darkPaletteMoss900 = #E2FB99
    internal static let darkPaletteNeutral0 = #000000
    internal static let darkPaletteNeutral100 = #353537
    internal static let darkPaletteNeutral1000 = #FFFFFF
    internal static let darkPaletteNeutral200 = #49494B
    internal static let darkPaletteNeutral25 = #0D0D10
    internal static let darkPaletteNeutral300 = #5E5E60
    internal static let darkPaletteNeutral400 = #747476
    internal static let darkPaletteNeutral50 = #222224
    internal static let darkPaletteNeutral500 = #8A8A8D
    internal static let darkPaletteNeutral600 = #A2A2A5
    internal static let darkPaletteNeutral700 = #BABABC
    internal static let darkPaletteNeutral800 = #D3D3D5
    internal static let darkPaletteNeutral900 = #F0F0F3
    internal static let darkPalettePurple100 = #57067A
    internal static let darkPalettePurple200 = #750EA1
    internal static let darkPalettePurple25 = #1E002A
    internal static let darkPalettePurple300 = #931CC7
    internal static let darkPalettePurple400 = #AF38E3
    internal static let darkPalettePurple50 = #3B0253
    internal static let darkPalettePurple500 = #C35DF0
    internal static let darkPalettePurple600 = #D480F7
    internal static let darkPalettePurple700 = #E2A2FC
    internal static let darkPalettePurple800 = #EDC5FE
    internal static let darkPalettePurple900 = #F8ECFD
    internal static let darkPaletteRed100 = #6D0A04
    internal static let darkPaletteRed200 = #93120B
    internal static let darkPaletteRed25 = #240300
    internal static let darkPaletteRed300 = #B81D16
    internal static let darkPaletteRed400 = #DC3028
    internal static let darkPaletteRed50 = #4B0501
    internal static let darkPaletteRed500 = #EC5A51
    internal static let darkPaletteRed600 = #F67F79
    internal static let darkPaletteRed700 = #FCA39E
    internal static let darkPaletteRed800 = #FEC5C2
    internal static let darkPaletteRed900 = #FEECEC
    internal static let darkPaletteRose100 = #6D052E
    internal static let darkPaletteRose200 = #910B40
    internal static let darkPaletteRose25 = #24000E
    internal static let darkPaletteRose300 = #B61554
    internal static let darkPaletteRose400 = #DB256D
    internal static let darkPaletteRose50 = #4B011E
    internal static let darkPaletteRose500 = #EC518F
    internal static let darkPaletteRose600 = #F679AB
    internal static let darkPaletteRose700 = #FC9EC3
    internal static let darkPaletteRose800 = #FEC3DA
    internal static let darkPaletteRose900 = #FEECF3
    internal static let darkPaletteTeal100 = #013D2E
    internal static let darkPaletteTeal200 = #02543F
    internal static let darkPaletteTeal25 = #00110D
    internal static let darkPaletteTeal300 = #056B52
    internal static let darkPaletteTeal400 = #088465
    internal static let darkPaletteTeal50 = #02281E
    internal static let darkPaletteTeal500 = #0D9D79
    internal static let darkPaletteTeal600 = #16B78F
    internal static let darkPaletteTeal700 = #21D2A6
    internal static let darkPaletteTeal800 = #50EBC5
    internal static let darkPaletteTeal900 = #BCFDED
    internal static let darkPaletteViolet100 = #420C94
    internal static let darkPaletteViolet200 = #5A18BF
    internal static let darkPaletteViolet25 = #160039
    internal static let darkPaletteViolet300 = #7530DF
    internal static let darkPaletteViolet400 = #8E50EB
    internal static let darkPaletteViolet50 = #2B0467
    internal static let darkPaletteViolet500 = #A46EF3
    internal static let darkPaletteViolet600 = #B88DF9
    internal static let darkPaletteViolet700 = #CBACFC
    internal static let darkPaletteViolet800 = #DFCAFE
    internal static let darkPaletteViolet900 = #F4EEFD
    internal static let darkPaletteYellow100 = #4A3001
    internal static let darkPaletteYellow200 = #644203
    internal static let darkPaletteYellow25 = #130D00
    internal static let darkPaletteYellow300 = #7F5606
    internal static let darkPaletteYellow400 = #9C6A0D
    internal static let darkPaletteYellow50 = #2F1E00
    internal static let darkPaletteYellow500 = #B97F16
    internal static let darkPaletteYellow600 = #D69622
    internal static let darkPaletteYellow700 = #E9B149
    internal static let darkPaletteYellow800 = #F7CD7E
    internal static let darkPaletteYellow900 = #FEEFD3
    internal static let durationQuickly = 0.05s ease
    internal static let fontFamilyInter = Inter
    internal static let fontSize10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize11xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize12xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize13xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize14xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize15xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSize9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSizeLarge = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSizeMedium = roundTo(16 * 1.125 /2,0) *2
    internal static let fontSizeRegular = 16
    internal static let fontSizeScale = 1.125
    internal static let fontSizeSmall = roundTo(16 / 1.125 / 2,0) *2
    internal static let fontSizeXLarge = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSizeXSmall = roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2
    internal static let fontSizeXxLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    internal static let fontSizeXxSmall = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2
    internal static let fontWeightBold = Bold
    internal static let fontWeightMedium = Medium
    internal static let fontWeightRegular = Regular
    internal static let fontWeightSemibold = Semi Bold
    internal static let heading2xLargeBold = [object Object]
    internal static let heading2xLargeMedium = [object Object]
    internal static let heading2xLargeRegular = [object Object]
    internal static let heading2xLargeSemibold = [object Object]
    internal static let heading3xLargeBold = [object Object]
    internal static let heading3xLargeMedium = [object Object]
    internal static let heading3xLargeRegular = [object Object]
    internal static let heading3xLargeSemibold = [object Object]
    internal static let heading4xLargeBold = [object Object]
    internal static let heading4xLargeMedium = [object Object]
    internal static let heading4xLargeRegular = [object Object]
    internal static let heading4xLargeSemibold = [object Object]
    internal static let heading5xLargeBold = [object Object]
    internal static let heading5xLargeMedium = [object Object]
    internal static let heading5xLargeRegular = [object Object]
    internal static let heading5xLargeSemibold = [object Object]
    internal static let heading6xLargeBold = [object Object]
    internal static let heading6xLargeMedium = [object Object]
    internal static let heading6xLargeRegular = [object Object]
    internal static let heading6xLargeSemibold = [object Object]
    internal static let heading7xLargeBold = [object Object]
    internal static let heading7xLargeMedium = [object Object]
    internal static let heading7xLargeRegular = [object Object]
    internal static let heading7xLargeSemibold = [object Object]
    internal static let heading8xLargeBold = [object Object]
    internal static let heading8xLargeMedium = [object Object]
    internal static let heading8xLargeRegular = [object Object]
    internal static let heading8xLargeSemibold = [object Object]
    internal static let heading9xLargeBold = [object Object]
    internal static let heading9xLargeMedium = [object Object]
    internal static let heading9xLargeRegular = [object Object]
    internal static let heading9xLargeSemibold = [object Object]
    internal static let headingLargeBold = [object Object]
    internal static let headingLargeMedium = [object Object]
    internal static let headingLargeRegular = [object Object]
    internal static let headingLargeSemibold = [object Object]
    internal static let headingMediumBold = [object Object]
    internal static let headingMediumMedium = [object Object]
    internal static let headingMediumRegular = [object Object]
    internal static let headingMediumSemibold = [object Object]
    internal static let headingRegularBold = [object Object]
    internal static let headingRegularMedium = [object Object]
    internal static let headingRegularRegular = [object Object]
    internal static let headingRegularSemibold = [object Object]
    internal static let headingSmallBold = [object Object]
    internal static let headingSmallMedium = [object Object]
    internal static let headingSmallRegular = [object Object]
    internal static let headingSmallSemibold = [object Object]
    internal static let headingXLargeBold = [object Object]
    internal static let headingXLargeMedium = [object Object]
    internal static let headingXLargeRegular = [object Object]
    internal static let headingXLargeSemibold = [object Object]
    internal static let headingXSmallBold = [object Object]
    internal static let headingXSmallMedium = [object Object]
    internal static let headingXSmallRegular = [object Object]
    internal static let headingXSmallSemibold = [object Object]
    internal static let headingXxLargeBold = [object Object]
    internal static let headingXxLargeMedium = [object Object]
    internal static let headingXxLargeRegular = [object Object]
    internal static let headingXxLargeSemibold = [object Object]
    internal static let headingXxSmallBold = [object Object]
    internal static let headingXxSmallMedium = [object Object]
    internal static let headingXxSmallRegular = [object Object]
    internal static let headingXxSmallSemibold = [object Object]
    internal static let labelMediumBold = [object Object]
    internal static let labelMediumMedium = [object Object]
    internal static let labelMediumRegular = [object Object]
    internal static let labelMediumSemibold = [object Object]
    internal static let labelRegularBold = [object Object]
    internal static let labelRegularMedium = [object Object]
    internal static let labelRegularRegular = [object Object]
    internal static let labelRegularSemibold = [object Object]
    internal static let labelSmallBold = [object Object]
    internal static let labelSmallMedium = [object Object]
    internal static let labelSmallRegular = [object Object]
    internal static let labelSmallSemibold = [object Object]
    internal static let labelXSmallBold = [object Object]
    internal static let labelXSmallMedium = [object Object]
    internal static let labelXSmallRegular = [object Object]
    internal static let labelXSmallSemibold = [object Object]
    internal static let labelXxSmallBold = [object Object]
    internal static let labelXxSmallMedium = [object Object]
    internal static let labelXxSmallRegular = [object Object]
    internal static let labelXxSmallSemibold = [object Object]
    internal static let letterSpacing10xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing11xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing12xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing13xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing14xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing15xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing3xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing4xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing5xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing6xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing7xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing8xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacing9xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacingA = -0.0223
    internal static let letterSpacingB = 0.185
    internal static let letterSpacingC = -0.1745
    internal static let letterSpacingLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacingMedium = -0.0223 + 0.185 * (2.71828 ^ (roundTo(16 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacingRegular = -0.0223 + 0.185 * (2.71828 ^ (16 * -0.1745))
    internal static let letterSpacingSmall = -0.0223 + 0.185 * (2.71828 ^ (roundTo(16 / 1.125 / 2,0) *2 * -0.1745))
    internal static let letterSpacingXLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacingXSmall = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * -0.1745))
    internal static let letterSpacingXxLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    internal static let letterSpacingXxSmall = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * -0.1745))
    internal static let lightPaletteBlue100 = #AAC7FC
    internal static let lightPaletteBlue200 = #7FAAF7
    internal static let lightPaletteBlue25 = #F2F6FE
    internal static let lightPaletteBlue300 = #598DEF
    internal static let lightPaletteBlue400 = #3672E2
    internal static let lightPaletteBlue50 = #D3E2FE
    internal static let lightPaletteBlue500 = #1E5BCC
    internal static let lightPaletteBlue600 = #1248AC
    internal static let lightPaletteBlue700 = #0A378B
    internal static let lightPaletteBlue800 = #042768
    internal static let lightPaletteBlue900 = #001233
    internal static let lightPaletteCyan100 = #63D5F1
    internal static let lightPaletteCyan200 = #28B8DC
    internal static let lightPaletteCyan25 = #E5F9FE
    internal static let lightPaletteCyan300 = #179BBD
    internal static let lightPaletteCyan400 = #0D819F
    internal static let lightPaletteCyan50 = #A2EBFC
    internal static let lightPaletteCyan500 = #086B84
    internal static let lightPaletteCyan600 = #05556A
    internal static let lightPaletteCyan700 = #024253
    internal static let lightPaletteCyan800 = #01303B
    internal static let lightPaletteCyan900 = #01161B
    internal static let lightPaletteGreen100 = #66E032
    internal static let lightPaletteGreen200 = #4CC219
    internal static let lightPaletteGreen25 = #E0FED3
    internal static let lightPaletteGreen300 = #3CA40F
    internal static let lightPaletteGreen400 = #308808
    internal static let lightPaletteGreen50 = #9FF67A
    internal static let lightPaletteGreen500 = #267004
    internal static let lightPaletteGreen600 = #1C5B02
    internal static let lightPaletteGreen700 = #174701
    internal static let lightPaletteGreen800 = #0F3300
    internal static let lightPaletteGreen900 = #071800
    internal static let lightPaletteIndigo100 = #C6C1FD
    internal static let lightPaletteIndigo200 = #A99FFB
    internal static let lightPaletteIndigo25 = #F6F5FE
    internal static let lightPaletteIndigo300 = #8C80F7
    internal static let lightPaletteIndigo400 = #7061F1
    internal static let lightPaletteIndigo50 = #E1DEFC
    internal static let lightPaletteIndigo500 = #5646E8
    internal static let lightPaletteIndigo600 = #3A2ADC
    internal static let lightPaletteIndigo700 = #2717BC
    internal static let lightPaletteIndigo800 = #180B91
    internal static let lightPaletteIndigo900 = #090250
    internal static let lightPaletteMagenta100 = #FDAAFC
    internal static let lightPaletteMagenta200 = #F67AF6
    internal static let lightPaletteMagenta25 = #FEF2FE
    internal static let lightPaletteMagenta300 = #E846E8
    internal static let lightPaletteMagenta400 = #CD1ECD
    internal static let lightPaletteMagenta50 = #FED3FE
    internal static let lightPaletteMagenta500 = #AB12AB
    internal static let lightPaletteMagenta600 = #8C0A8C
    internal static let lightPaletteMagenta700 = #6F056F
    internal static let lightPaletteMagenta800 = #520252
    internal static let lightPaletteMagenta900 = #2A0129
    internal static let lightPaletteMoss100 = #A8D622
    internal static let lightPaletteMoss200 = #8FB816
    internal static let lightPaletteMoss25 = #ECFDB7
    internal static let lightPaletteMoss300 = #779B0D
    internal static let lightPaletteMoss400 = #628107
    internal static let lightPaletteMoss50 = #CAEF59
    internal static let lightPaletteMoss500 = #506A04
    internal static let lightPaletteMoss600 = #405602
    internal static let lightPaletteMoss700 = #324301
    internal static let lightPaletteMoss800 = #243000
    internal static let lightPaletteMoss900 = #111600
    internal static let lightPaletteNeutral0 = #FFFFFF
    internal static let lightPaletteNeutral100 = #C5C5C7
    internal static let lightPaletteNeutral1000 = #000000
    internal static let lightPaletteNeutral200 = #A9A9AB
    internal static let lightPaletteNeutral25 = #F5F5F7
    internal static let lightPaletteNeutral300 = #8F8F91
    internal static let lightPaletteNeutral400 = #767678
    internal static let lightPaletteNeutral50 = #DFDFE2
    internal static let lightPaletteNeutral500 = #616163
    internal static let lightPaletteNeutral600 = #4E4E50
    internal static let lightPaletteNeutral700 = #3C3C3E
    internal static let lightPaletteNeutral800 = #2C2B2E
    internal static let lightPaletteNeutral900 = #131316
    internal static let lightPalettePurple100 = #E7B3FC
    internal static let lightPalettePurple200 = #D98CF9
    internal static let lightPalettePurple25 = #FBF3FE
    internal static let lightPalettePurple300 = #C763F1
    internal static let lightPalettePurple400 = #B23CE5
    internal static let lightPalettePurple50 = #F2D7FD
    internal static let lightPalettePurple500 = #981FCD
    internal static let lightPalettePurple600 = #7D12AB
    internal static let lightPalettePurple700 = #630A89
    internal static let lightPalettePurple800 = #490466
    internal static let lightPalettePurple900 = #260035
    internal static let lightPaletteRed100 = #FDB3B0
    internal static let lightPaletteRed200 = #F88B85
    internal static let lightPaletteRed25 = #FEF3F3
    internal static let lightPaletteRed300 = #EF6058
    internal static let lightPaletteRed400 = #DE362D
    internal static let lightPaletteRed50 = #FED7D5
    internal static let lightPaletteRed500 = #BE1F17
    internal static let lightPaletteRed600 = #9D140D
    internal static let lightPaletteRed700 = #7D0C06
    internal static let lightPaletteRed800 = #5D0602
    internal static let lightPaletteRed900 = #2F0300
    internal static let lightPaletteRose100 = #FDB0CE
    internal static let lightPaletteRose200 = #F886B3
    internal static let lightPaletteRose25 = #FEF3F7
    internal static let lightPaletteRose300 = #EF5895
    internal static let lightPaletteRose400 = #DD2B71
    internal static let lightPaletteRose50 = #FED7E6
    internal static let lightPaletteRose500 = #BD1758
    internal static let lightPaletteRose600 = #9B0D45
    internal static let lightPaletteRose700 = #7C0635
    internal static let lightPaletteRose800 = #5C0226
    internal static let lightPaletteRose900 = #300013
    internal static let lightPaletteTeal100 = #2DDEB1
    internal static let lightPaletteTeal200 = #18C096
    internal static let lightPaletteTeal25 = #D5FEF3
    internal static let lightPaletteTeal300 = #0EA27C
    internal static let lightPaletteTeal400 = #098667
    internal static let lightPaletteTeal50 = #75F5D5
    internal static let lightPaletteTeal500 = #056F54
    internal static let lightPaletteTeal600 = #025943
    internal static let lightPaletteTeal700 = #024634
    internal static let lightPaletteTeal800 = #003225
    internal static let lightPaletteTeal900 = #011712
    internal static let lightPaletteViolet100 = #D5BBFC
    internal static let lightPaletteViolet200 = #BE97FA
    internal static let lightPaletteViolet25 = #F8F4FE
    internal static let lightPaletteViolet300 = #A874F4
    internal static let lightPaletteViolet400 = #9054EC
    internal static let lightPaletteViolet50 = #E8DCFC
    internal static let lightPaletteViolet500 = #7936E1
    internal static let lightPaletteViolet600 = #621DCA
    internal static let lightPaletteViolet700 = #4C10A7
    internal static let lightPaletteViolet800 = #36077F
    internal static let lightPaletteViolet900 = #1B0144
    internal static let lightPaletteYellow100 = #F1BE60
    internal static let lightPaletteYellow200 = #DD9E2A
    internal static let lightPaletteYellow25 = #FEF5E4
    internal static let lightPaletteYellow300 = #BE8317
    internal static let lightPaletteYellow400 = #A06D0E
    internal static let lightPaletteYellow50 = #FCDCA2
    internal static let lightPaletteYellow500 = #845907
    internal static let lightPaletteYellow600 = #6C4704
    internal static let lightPaletteYellow700 = #553701
    internal static let lightPaletteYellow800 = #3D2700
    internal static let lightPaletteYellow900 = #1B1200
    internal static let lineHeight10xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight10xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight10xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight11xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight11xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight11xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight12xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight12xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight12xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight13xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight13xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight13xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight14xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight14xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight14xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight15xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight15xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight15xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight3xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight3xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight3xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight4xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight4xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight4xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight5xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight5xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight5xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight6xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight6xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight6xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight7xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight7xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight7xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight8xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight8xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight8xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeight9xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeight9xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeight9xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightLargeLoose = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightLargeNormal = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightLargeTight = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightMediumLoose = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightMediumNormal = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightMediumTight = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightRegularLoose = roundTo(16 * 1.7 / 4,0) * 4
    internal static let lineHeightRegularNormal = roundTo(16 * 1.5 / 4,0) * 4
    internal static let lineHeightRegularTight = roundTo(16 * 1.2 / 4,0) * 4
    internal static let lineHeightScaleLoose = 1.7
    internal static let lineHeightScaleNormal = 1.5
    internal static let lineHeightScaleTight = 1.2
    internal static let lineHeightSmallLoose = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightSmallNormal = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightSmallTight = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightXLargeLoose = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightXLargeNormal = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightXLargeTight = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightXSmallLoose = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightXSmallNormal = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightXSmallTight = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightXxLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightXxLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightXxLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    internal static let lineHeightXxSmallLoose = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    internal static let lineHeightXxSmallNormal = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    internal static let lineHeightXxSmallTight = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    internal static let opacity100 = 0.21
    internal static let opacity200 = 0.29
    internal static let opacity25 = 0.05
    internal static let opacity300 = 0.37
    internal static let opacity400 = 0.46
    internal static let opacity50 = 0.13
    internal static let opacity500 = 0.54
    internal static let opacity600 = 0.64
    internal static let opacity700 = 0.73
    internal static let opacity800 = 0.83
    internal static let opacity900 = 0.94
    internal static let paragraphLargeBold = [object Object]
    internal static let paragraphLargeMedium = [object Object]
    internal static let paragraphLargeRegular = [object Object]
    internal static let paragraphLargeSemibold = [object Object]
    internal static let paragraphMediumBold = [object Object]
    internal static let paragraphMediumMedium = [object Object]
    internal static let paragraphMediumRegular = [object Object]
    internal static let paragraphMediumSemibold = [object Object]
    internal static let paragraphRegularBold = [object Object]
    internal static let paragraphRegularMedium = [object Object]
    internal static let paragraphRegularRegular = [object Object]
    internal static let paragraphRegularSemibold = [object Object]
    internal static let paragraphSmallBold = [object Object]
    internal static let paragraphSmallMedium = [object Object]
    internal static let paragraphSmallRegular = [object Object]
    internal static let paragraphSmallSemibold = [object Object]
    internal static let paragraphSpacing10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing11xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing12xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing13xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing14xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing15xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacing9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingLarge = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingMedium = roundTo(roundTo(16 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingRegular = roundTo(16 * 0.75 / 1,0) *1
    internal static let paragraphSpacingScale = 0.75
    internal static let paragraphSpacingSmall = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingXLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingXSmall = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingXxLarge = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphSpacingXxSmall = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 0.75 / 1,0) *1
    internal static let paragraphXLargeBold = [object Object]
    internal static let paragraphXLargeMedium = [object Object]
    internal static let paragraphXLargeRegular = [object Object]
    internal static let paragraphXLargeSemibold = [object Object]
    internal static let paragraphXSmallBold = [object Object]
    internal static let paragraphXSmallMedium = [object Object]
    internal static let paragraphXSmallRegular = [object Object]
    internal static let paragraphXSmallSemibold = [object Object]
    internal static let paragraphXxLargeBold = [object Object]
    internal static let paragraphXxLargeMedium = [object Object]
    internal static let paragraphXxLargeRegular = [object Object]
    internal static let paragraphXxLargeSemibold = [object Object]
    internal static let paragraphXxSmallBold = [object Object]
    internal static let paragraphXxSmallMedium = [object Object]
    internal static let paragraphXxSmallRegular = [object Object]
    internal static let paragraphXxSmallSemibold = [object Object]
    internal static let size10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size3xSmall = roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) /2,0) *2
    internal static let size4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let size9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let sizeFontBase = CGFloat(16.00) /* the base size of the font */
    internal static let sizeFontLarge = CGFloat(32.00) /* the large size of the font */
    internal static let sizeFontMedium = CGFloat(16.00) /* the medium size of the font */
    internal static let sizeFontSmall = CGFloat(12.00) /* the small size of the font */
    internal static let sizeLarge = roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let sizeMedium = roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2
    internal static let sizeRegular = CGFloat(256.00)
    internal static let sizeScale = CGFloat(19.20)
    internal static let sizeSmall = roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2
    internal static let sizeXLarge = roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let sizeXSmall = roundTo(roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    internal static let sizeXxLarge = roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let sizeXxSmall = roundTo(roundTo(roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    internal static let space10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space3xSmall = roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    internal static let space4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space4xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    internal static let space5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space5xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2
    internal static let space6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space6xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2
    internal static let space7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space7xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 1,0) *1
    internal static let space8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let space9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let spaceLarge = roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let spaceMedium = roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2
    internal static let spaceNone = 0
    internal static let spaceRegular = 16
    internal static let spaceSmall = roundTo(16 / CGFloat(19.20) / 2,0) *2
    internal static let spaceXLarge = roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let spaceXSmall = roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    internal static let spaceXxLarge = roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    internal static let spaceXxSmall = roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    internal static let textCaseCapitalize = capitalize
    internal static let textCaseLowercase = lowercase
    internal static let textCaseNone = none
    internal static let textCaseUppercase = uppercase
    internal static let textDecorationLineThrough = line-through
    internal static let textDecorationNone = none
    internal static let textDecorationUnderline = underline
    internal static let zIndexDeep = -999999
    internal static let zIndexDefault = 1
    internal static let zIndexDocked = 100
    internal static let zIndexMask = 200
    internal static let zIndexModal = 800
    internal static let zIndexNavigation = 400
    internal static let zIndexOverlay = 500
    internal static let zIndexPopout = 700
    internal static let zIndexSpinner = 600
    internal static let zIndexSticky = 300
    internal static let zIndexToast = 900
}
