
//
// StyleDictionary+Class.swift
//

// Do not edit directly
// Generated on Fri, 25 Nov 2022 12:18:23 GMT


import UIKit

public class StyleDictionaryClass {
    public static let 1 = 1
    public static let 100 = 0.21
    public static let 10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 10xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 10xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 10xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 11xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let 11xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 11xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 11xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 12xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let 12xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 12xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 12xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 13xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let 13xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 13xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 13xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 14xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let 14xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 14xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 14xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 15xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let 15xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 15xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 15xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 2 = 2
    public static let 200 = 0.29
    public static let 25 = 0.05
    public static let 2xLargeBold = [object Object]
    public static let 2xLargeMedium = [object Object]
    public static let 2xLargeRegular = [object Object]
    public static let 2xLargeSemibold = [object Object]
    public static let 300 = 0.37
    public static let 3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 3xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 3xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 3xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 3xSmall = roundTo(roundTo(roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    public static let 4 = 4
    public static let 400 = 0.46
    public static let 4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 4xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 4xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 4xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 4xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let 50 = 0.13
    public static let 50 = 999999
    public static let 500 = 0.54
    public static let 5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 5xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 5xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 5xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 5xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2
    public static let 600 = 0.64
    public static let 6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 6xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 6xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 6xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 6xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2
    public static let 700 = 0.73
    public static let 7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 7xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 7xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 7xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 7xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 1,0) *1
    public static let 800 = 0.83
    public static let 8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 8xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 8xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 8xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let 900 = 0.94
    public static let 9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let 9xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let 9xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let 9xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let a = -0.022
    public static let alphaBlack100 = rgba(#000000, 0.21)
    public static let alphaBlack200 = rgba(#000000, 0.29)
    public static let alphaBlack25 = rgba(#000000, 0.05)
    public static let alphaBlack300 = rgba(#000000, 0.37)
    public static let alphaBlack400 = rgba(#000000, 0.46)
    public static let alphaBlack50 = rgba(#000000, 0.13)
    public static let alphaBlack500 = rgba(#000000, 0.54)
    public static let alphaBlack600 = rgba(#000000, 0.64)
    public static let alphaBlack700 = rgba(#000000, 0.73)
    public static let alphaBlack800 = rgba(#000000, 0.83)
    public static let alphaBlack900 = rgba(#000000, 0.94)
    public static let alphaWhite100 = rgba(#FFFFFF, 0.21)
    public static let alphaWhite200 = rgba(#FFFFFF, 0.29)
    public static let alphaWhite25 = rgba(#FFFFFF, 0.05)
    public static let alphaWhite300 = rgba(#FFFFFF, 0.37)
    public static let alphaWhite400 = rgba(#FFFFFF, 0.46)
    public static let alphaWhite50 = rgba(#FFFFFF, 0.13)
    public static let alphaWhite500 = rgba(#FFFFFF, 0.54)
    public static let alphaWhite600 = rgba(#FFFFFF, 0.64)
    public static let alphaWhite700 = rgba(#FFFFFF, 0.73)
    public static let alphaWhite800 = rgba(#FFFFFF, 0.83)
    public static let alphaWhite900 = rgba(#FFFFFF, 0.94)
    public static let axisLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let axisLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let axisLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let axisMedium1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2
    public static let axisMedium2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let axisMedium3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let axisRegular1 = roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2
    public static let axisRegular2 = roundTo(roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let axisRegular3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let axisScale = 1.5
    public static let axisSmall1 = roundTo(1.5 * 1 /2,0) *2
    public static let axisSmall2 = roundTo(roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let axisSmall3 = roundTo(roundTo(roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let axisXLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let axisXLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let axisXLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let axisXSmall1 = 1
    public static let axisXSmall2 = roundTo(1 / (2 * 1.5) /1,0) *1
    public static let axisXSmall3 = roundTo(roundTo(1 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let axisXxLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let axisXxLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let axisXxLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let b = 0.185
    public static let black100 = rgba(#000000, 0.21)
    public static let black200 = rgba(#000000, 0.29)
    public static let black25 = rgba(#000000, 0.05)
    public static let black300 = rgba(#000000, 0.37)
    public static let black400 = rgba(#000000, 0.46)
    public static let black50 = rgba(#000000, 0.13)
    public static let black500 = rgba(#000000, 0.54)
    public static let black600 = rgba(#000000, 0.64)
    public static let black700 = rgba(#000000, 0.73)
    public static let black800 = rgba(#000000, 0.83)
    public static let black900 = rgba(#000000, 0.94)
    public static let blurLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let blurLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let blurLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let blurMedium1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2
    public static let blurMedium2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let blurMedium3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let blurRegular1 = 1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2
    public static let blurRegular2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let blurRegular3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let blurScale = 1.5
    public static let blurSmall1 = 1.5*roundTo(1.5 * 1 /2,0) *2
    public static let blurSmall2 = roundTo(1.5*roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let blurSmall3 = roundTo(roundTo(1.5*roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let blurXLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let blurXLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let blurXLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let blurXSmall1 = 1.5*1
    public static let blurXSmall2 = roundTo(1.5*1 / (2 * 1.5) /1,0) *1
    public static let blurXSmall3 = roundTo(roundTo(1.5*1 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let blurXxLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let blurXxLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let blurXxLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let bold = Bold
    public static let borderRadius3xSmall = roundTo(roundTo(roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    public static let borderRadius50 = 999999
    public static let borderRadiusLarge = roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    public static let borderRadiusMedium = roundTo(16 * 1.5 /2,0) *2
    public static let borderRadiusRegular = 16
    public static let borderRadiusScale = 1.5
    public static let borderRadiusSmall = roundTo(16 / 1.5 / 2,0) *2
    public static let borderRadiusXLarge = roundTo(roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    public static let borderRadiusXSmall = roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    public static let borderRadiusXxLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    public static let borderRadiusXxSmall = roundTo(roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    public static let borderWidth1 = 1
    public static let borderWidth2 = 2
    public static let borderWidth4 = 4
    public static let boxShadowAxisLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowAxisLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisMedium1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowAxisMedium2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisMedium3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisRegular1 = roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2
    public static let boxShadowAxisRegular2 = roundTo(roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisRegular3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisScale = 1.5
    public static let boxShadowAxisSmall1 = roundTo(1.5 * 1 /2,0) *2
    public static let boxShadowAxisSmall2 = roundTo(roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisSmall3 = roundTo(roundTo(roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisXLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowAxisXLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisXLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisXSmall1 = 1
    public static let boxShadowAxisXSmall2 = roundTo(1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisXSmall3 = roundTo(roundTo(1 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisXxLarge1 = roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowAxisXxLarge2 = roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowAxisXxLarge3 = roundTo(roundTo(roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowBlurLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurMedium1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowBlurMedium2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurMedium3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurRegular1 = 1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2
    public static let boxShadowBlurRegular2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurRegular3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurScale = 1.5
    public static let boxShadowBlurSmall1 = 1.5*roundTo(1.5 * 1 /2,0) *2
    public static let boxShadowBlurSmall2 = roundTo(1.5*roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurSmall3 = roundTo(roundTo(1.5*roundTo(1.5 * 1 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurXLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowBlurXLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurXLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurXSmall1 = 1.5*1
    public static let boxShadowBlurXSmall2 = roundTo(1.5*1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurXSmall3 = roundTo(roundTo(1.5*1 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurXxLarge1 = 1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2
    public static let boxShadowBlurXxLarge2 = roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1
    public static let boxShadowBlurXxLarge3 = roundTo(roundTo(1.5*roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * roundTo(1.5 * 1 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 /2,0) *2 / (2 * 1.5) /1,0) *1 / (2 * 1.5) /1,0) *1
    public static let boxShadowColorDarkNeutral0 = #000000
    public static let boxShadowColorDarkNeutral200 = #49494B
    public static let boxShadowColorDarkNeutral25 = #0D0D10
    public static let boxShadowColorDarkOnBackgroundInverseOpacity1 = 0.17
    public static let boxShadowColorDarkOnBackgroundInverseOpacity2 = roundTo(0.57 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnBackgroundInverseOpacity3 = roundTo(roundTo(0.57 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnBackgroundOpacity1 = 1
    public static let boxShadowColorDarkOnBackgroundOpacity2 = roundTo(0.18 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnBackgroundOpacity3 = roundTo(roundTo(0.18 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceHighEmphasisInverseOpacity1 = 0.22
    public static let boxShadowColorDarkOnSurfaceHighEmphasisInverseOpacity2 = roundTo(0.23 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceHighEmphasisInverseOpacity3 = roundTo(roundTo(0.23 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceHighEmphasisOpacity1 = 0.22
    public static let boxShadowColorDarkOnSurfaceHighEmphasisOpacity2 = roundTo(0.22 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceHighEmphasisOpacity3 = roundTo(roundTo(0.22 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceInverseOpacity1 = 0.20
    public static let boxShadowColorDarkOnSurfaceInverseOpacity2 = roundTo(0.32 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceInverseOpacity3 = roundTo(roundTo(0.32 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceLowEmphasisInverseOpacity1 = 0.18
    public static let boxShadowColorDarkOnSurfaceLowEmphasisInverseOpacity2 = roundTo(0.48 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceLowEmphasisInverseOpacity3 = roundTo(roundTo(0.48 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceLowEmphasisOpacity1 = 0.52
    public static let boxShadowColorDarkOnSurfaceLowEmphasisOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceLowEmphasisOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceOpacity1 = 0.30
    public static let boxShadowColorDarkOnSurfaceOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorDarkOnSurfaceOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightNeutral1000 = #000000
    public static let boxShadowColorLightNeutral600 = #4E4E50
    public static let boxShadowColorLightNeutral900 = #131316
    public static let boxShadowColorLightOnBackgroundInverseOpacity1 = 0.57
    public static let boxShadowColorLightOnBackgroundInverseOpacity2 = roundTo(0.57 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnBackgroundInverseOpacity3 = roundTo(roundTo(0.57 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnBackgroundOpacity1 = 0.18
    public static let boxShadowColorLightOnBackgroundOpacity2 = roundTo(0.18 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnBackgroundOpacity3 = roundTo(roundTo(0.18 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceHighEmphasisInverseOpacity1 = 0.23
    public static let boxShadowColorLightOnSurfaceHighEmphasisInverseOpacity2 = roundTo(0.23 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceHighEmphasisInverseOpacity3 = roundTo(roundTo(0.23 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceHighEmphasisOpacity1 = 0.22
    public static let boxShadowColorLightOnSurfaceHighEmphasisOpacity2 = roundTo(0.22 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceHighEmphasisOpacity3 = roundTo(roundTo(0.22 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceInverseOpacity1 = 0.32
    public static let boxShadowColorLightOnSurfaceInverseOpacity2 = roundTo(0.32 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceInverseOpacity3 = roundTo(roundTo(0.32 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceLowEmphasisInverseOpacity1 = 0.48
    public static let boxShadowColorLightOnSurfaceLowEmphasisInverseOpacity2 = roundTo(0.48 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceLowEmphasisInverseOpacity3 = roundTo(roundTo(0.48 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceLowEmphasisOpacity1 = 0.19
    public static let boxShadowColorLightOnSurfaceLowEmphasisOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceLowEmphasisOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceOpacity1 = 0.19
    public static let boxShadowColorLightOnSurfaceOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let boxShadowColorLightOnSurfaceOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let boxShadowColorScale = 1.5
    public static let boxShadowDarkOnBackgroundInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnBackgroundXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceHighEphasisXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceLowEmphasisXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceMedium = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceRegular = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowDarkOnSurfaceXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnBackgroundXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceHighEphasisXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceLowEmphasisXxLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceMedium = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceRegular = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceXLarge = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceXSmall = [object Object],[object Object],[object Object]
    public static let boxShadowLightOnSurfaceXxLarge = [object Object],[object Object],[object Object]
    public static let c = -0.174
    public static let capitalize = capitalize
    public static let colorBaseGrayDark = UIColor(red: 0.067, green: 0.067, blue: 0.067, alpha: 1)
    public static let colorBaseGrayLight = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let colorBaseGrayMedium = UIColor(red: 0.600, green: 0.600, blue: 0.600, alpha: 1)
    public static let colorBaseGreen = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1)
    public static let colorBaseRed = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkNeutral0 = #000000
    public static let colorDarkNeutral200 = #49494B
    public static let colorDarkNeutral25 = #0D0D10
    public static let colorDarkOnBackgroundInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnBackgroundInverseOpacity2 = roundTo(0.57 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnBackgroundInverseOpacity3 = roundTo(roundTo(0.57 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnBackgroundOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnBackgroundOpacity2 = roundTo(0.18 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnBackgroundOpacity3 = roundTo(roundTo(0.18 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnSurfaceHighEmphasisInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnSurfaceHighEmphasisInverseOpacity2 = roundTo(0.23 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnSurfaceHighEmphasisInverseOpacity3 = roundTo(roundTo(0.23 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnSurfaceHighEmphasisOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnSurfaceHighEmphasisOpacity2 = roundTo(0.22 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnSurfaceHighEmphasisOpacity3 = roundTo(roundTo(0.22 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnSurfaceInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnSurfaceInverseOpacity2 = roundTo(0.32 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnSurfaceInverseOpacity3 = roundTo(roundTo(0.32 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnSurfaceLowEmphasisInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnSurfaceLowEmphasisInverseOpacity2 = roundTo(0.48 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnSurfaceLowEmphasisInverseOpacity3 = roundTo(roundTo(0.48 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnSurfaceLowEmphasisOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnSurfaceLowEmphasisOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnSurfaceLowEmphasisOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorDarkOnSurfaceOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorDarkOnSurfaceOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let colorDarkOnSurfaceOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorFontBase = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorFontSecondary = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1)
    public static let colorFontTertiary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let colorLightNeutral1000 = #000000
    public static let colorLightNeutral600 = #4E4E50
    public static let colorLightNeutral900 = #131316
    public static let colorLightOnBackgroundInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnBackgroundInverseOpacity2 = roundTo(0.57 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnBackgroundInverseOpacity3 = roundTo(roundTo(0.57 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnBackgroundOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnBackgroundOpacity2 = roundTo(0.18 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnBackgroundOpacity3 = roundTo(roundTo(0.18 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnSurfaceHighEmphasisInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnSurfaceHighEmphasisInverseOpacity2 = roundTo(0.23 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnSurfaceHighEmphasisInverseOpacity3 = roundTo(roundTo(0.23 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnSurfaceHighEmphasisOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnSurfaceHighEmphasisOpacity2 = roundTo(0.22 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnSurfaceHighEmphasisOpacity3 = roundTo(roundTo(0.22 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnSurfaceInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnSurfaceInverseOpacity2 = roundTo(0.32 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnSurfaceInverseOpacity3 = roundTo(roundTo(0.32 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnSurfaceLowEmphasisInverseOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnSurfaceLowEmphasisInverseOpacity2 = roundTo(0.48 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnSurfaceLowEmphasisInverseOpacity3 = roundTo(roundTo(0.48 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnSurfaceLowEmphasisOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnSurfaceLowEmphasisOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnSurfaceLowEmphasisOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorLightOnSurfaceOpacity1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorLightOnSurfaceOpacity2 = roundTo(0.19 / 1.5 /0.01, 0) *0.01
    public static let colorLightOnSurfaceOpacity3 = roundTo(roundTo(0.19 / 1.5 /0.01, 0) *0.01 / (2*1.5) /0.01, 0) *0.01
    public static let colorScale = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let darkOnBackgroundInverseLarge = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundInverseMedium = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundInverseRegular = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundInverseSmall = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundInverseXLarge = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundInverseXSmall = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundInverseXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundLarge = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundMedium = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundRegular = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundSmall = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundXLarge = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundXSmall = [object Object],[object Object],[object Object]
    public static let darkOnBackgroundXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisMedium = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisRegular = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisXLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisXSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceHighEphasisXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseMedium = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseRegular = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseXLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseXSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceInverseXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisMedium = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisRegular = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisXLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisXSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceLowEmphasisXxLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceMedium = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceRegular = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceXLarge = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceXSmall = [object Object],[object Object],[object Object]
    public static let darkOnSurfaceXxLarge = [object Object],[object Object],[object Object]
    public static let darkPaletteBlue100 = #062F7C
    public static let darkPaletteBlue200 = #0F42A3
    public static let darkPaletteBlue25 = #000E26
    public static let darkPaletteBlue300 = #1B57C7
    public static let darkPaletteBlue400 = #3370E0
    public static let darkPaletteBlue50 = #011E53
    public static let darkPaletteBlue500 = #5388EC
    public static let darkPaletteBlue600 = #75A2F5
    public static let darkPaletteBlue700 = #99BBFA
    public static let darkPaletteBlue800 = #BED4FD
    public static let darkPaletteBlue900 = #EAF1FD
    public static let darkPaletteCyan100 = #023A47
    public static let darkPaletteCyan200 = #045064
    public static let darkPaletteCyan25 = #000F13
    public static let darkPaletteCyan300 = #07667F
    public static let darkPaletteCyan400 = #0D7F9C
    public static let darkPaletteCyan50 = #002730
    public static let darkPaletteCyan500 = #1697B9
    public static let darkPaletteCyan600 = #22B0D4
    public static let darkPaletteCyan700 = #49C9E9
    public static let darkPaletteCyan800 = #83E1F8
    public static let darkPaletteCyan900 = #D7F6FE
    public static let darkPaletteGreen100 = #133D00
    public static let darkPaletteGreen200 = #1A5402
    public static let darkPaletteGreen25 = #051100
    public static let darkPaletteGreen300 = #246C04
    public static let darkPaletteGreen400 = #2E8508
    public static let darkPaletteGreen50 = #0D2701
    public static let darkPaletteGreen500 = #399E0D
    public static let darkPaletteGreen600 = #46B916
    public static let darkPaletteGreen700 = #56D321
    public static let darkPaletteGreen800 = #7EEB50
    public static let darkPaletteGreen900 = #CEFEBA
    public static let darkPaletteIndigo100 = #1E10A7
    public static let darkPaletteIndigo200 = #3222D4
    public static let darkPaletteIndigo25 = #070142
    public static let darkPaletteIndigo300 = #503FE6
    public static let darkPaletteIndigo400 = #6C5DF0
    public static let darkPaletteIndigo50 = #120677
    public static let darkPaletteIndigo500 = #867AF5
    public static let darkPaletteIndigo600 = #A096F9
    public static let darkPaletteIndigo700 = #B9B2FC
    public static let darkPaletteIndigo800 = #D2CEFE
    public static let darkPaletteIndigo900 = #F1EFFD
    public static let darkPaletteMagenta100 = #620362
    public static let darkPaletteMagenta200 = #830883
    public static let darkPaletteMagenta25 = #1E011E
    public static let darkPaletteMagenta300 = #A510A5
    public static let darkPaletteMagenta400 = #C91DC9
    public static let darkPaletteMagenta50 = #430143
    public static let darkPaletteMagenta500 = #E53DE5
    public static let darkPaletteMagenta600 = #F36CF3
    public static let darkPaletteMagenta700 = #FA96FA
    public static let darkPaletteMagenta800 = #FDBEFD
    public static let darkPaletteMagenta900 = #FDEBFD
    public static let darkPaletteMoss100 = #2B3A00
    public static let darkPaletteMoss200 = #3B5002
    public static let darkPaletteMoss25 = #1C2501
    public static let darkPaletteMoss300 = #4D6604
    public static let darkPaletteMoss400 = #607E07
    public static let darkPaletteMoss50 = #1C2501
    public static let darkPaletteMoss500 = #73960C
    public static let darkPaletteMoss600 = #88AF13
    public static let darkPaletteMoss700 = #9DC91C
    public static let darkPaletteMoss800 = #B8E237
    public static let darkPaletteMoss900 = #E2FB99
    public static let darkPaletteNeutral0 = #000000
    public static let darkPaletteNeutral100 = #353537
    public static let darkPaletteNeutral1000 = #FFFFFF
    public static let darkPaletteNeutral200 = #49494B
    public static let darkPaletteNeutral25 = #0D0D10
    public static let darkPaletteNeutral300 = #5E5E60
    public static let darkPaletteNeutral400 = #747476
    public static let darkPaletteNeutral50 = #222224
    public static let darkPaletteNeutral500 = #8A8A8D
    public static let darkPaletteNeutral600 = #A2A2A5
    public static let darkPaletteNeutral700 = #BABABC
    public static let darkPaletteNeutral800 = #D3D3D5
    public static let darkPaletteNeutral900 = #F0F0F3
    public static let darkPalettePurple100 = #57067A
    public static let darkPalettePurple200 = #750EA1
    public static let darkPalettePurple25 = #1E002A
    public static let darkPalettePurple300 = #931CC7
    public static let darkPalettePurple400 = #AF38E3
    public static let darkPalettePurple50 = #3B0253
    public static let darkPalettePurple500 = #C35DF0
    public static let darkPalettePurple600 = #D480F7
    public static let darkPalettePurple700 = #E2A2FC
    public static let darkPalettePurple800 = #EDC5FE
    public static let darkPalettePurple900 = #F8ECFD
    public static let darkPaletteRed100 = #6D0A04
    public static let darkPaletteRed200 = #93120B
    public static let darkPaletteRed25 = #240300
    public static let darkPaletteRed300 = #B81D16
    public static let darkPaletteRed400 = #DC3028
    public static let darkPaletteRed50 = #4B0501
    public static let darkPaletteRed500 = #EC5A51
    public static let darkPaletteRed600 = #F67F79
    public static let darkPaletteRed700 = #FCA39E
    public static let darkPaletteRed800 = #FEC5C2
    public static let darkPaletteRed900 = #FEECEC
    public static let darkPaletteRose100 = #6D052E
    public static let darkPaletteRose200 = #910B40
    public static let darkPaletteRose25 = #24000E
    public static let darkPaletteRose300 = #B61554
    public static let darkPaletteRose400 = #DB256D
    public static let darkPaletteRose50 = #4B011E
    public static let darkPaletteRose500 = #EC518F
    public static let darkPaletteRose600 = #F679AB
    public static let darkPaletteRose700 = #FC9EC3
    public static let darkPaletteRose800 = #FEC3DA
    public static let darkPaletteRose900 = #FEECF3
    public static let darkPaletteTeal100 = #013D2E
    public static let darkPaletteTeal200 = #02543F
    public static let darkPaletteTeal25 = #00110D
    public static let darkPaletteTeal300 = #056B52
    public static let darkPaletteTeal400 = #088465
    public static let darkPaletteTeal50 = #02281E
    public static let darkPaletteTeal500 = #0D9D79
    public static let darkPaletteTeal600 = #16B78F
    public static let darkPaletteTeal700 = #21D2A6
    public static let darkPaletteTeal800 = #50EBC5
    public static let darkPaletteTeal900 = #BCFDED
    public static let darkPaletteViolet100 = #420C94
    public static let darkPaletteViolet200 = #5A18BF
    public static let darkPaletteViolet25 = #160039
    public static let darkPaletteViolet300 = #7530DF
    public static let darkPaletteViolet400 = #8E50EB
    public static let darkPaletteViolet50 = #2B0467
    public static let darkPaletteViolet500 = #A46EF3
    public static let darkPaletteViolet600 = #B88DF9
    public static let darkPaletteViolet700 = #CBACFC
    public static let darkPaletteViolet800 = #DFCAFE
    public static let darkPaletteViolet900 = #F4EEFD
    public static let darkPaletteYellow100 = #4A3001
    public static let darkPaletteYellow200 = #644203
    public static let darkPaletteYellow25 = #130D00
    public static let darkPaletteYellow300 = #7F5606
    public static let darkPaletteYellow400 = #9C6A0D
    public static let darkPaletteYellow50 = #2F1E00
    public static let darkPaletteYellow500 = #B97F16
    public static let darkPaletteYellow600 = #D69622
    public static let darkPaletteYellow700 = #E9B149
    public static let darkPaletteYellow800 = #F7CD7E
    public static let darkPaletteYellow900 = #FEEFD3
    public static let deep = -999999
    public static let default = 1
    public static let docked = 100
    public static let durationQuickly = 0.05s ease
    public static let fontFamilyInter = Inter
    public static let fontSize10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize11xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize12xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize13xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize14xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize15xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSize9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSizeLarge = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSizeMedium = roundTo(16 * 1.125 /2,0) *2
    public static let fontSizeRegular = 16
    public static let fontSizeScale = 1.125
    public static let fontSizeSmall = roundTo(16 / 1.125 / 2,0) *2
    public static let fontSizeXLarge = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSizeXSmall = roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2
    public static let fontSizeXxLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2
    public static let fontSizeXxSmall = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2
    public static let fontWeightBold = Bold
    public static let fontWeightMedium = Medium
    public static let fontWeightRegular = Regular
    public static let fontWeightSemibold = Semi Bold
    public static let heading2xLargeBold = [object Object]
    public static let heading2xLargeMedium = [object Object]
    public static let heading2xLargeRegular = [object Object]
    public static let heading2xLargeSemibold = [object Object]
    public static let heading3xLargeBold = [object Object]
    public static let heading3xLargeMedium = [object Object]
    public static let heading3xLargeRegular = [object Object]
    public static let heading3xLargeSemibold = [object Object]
    public static let heading4xLargeBold = [object Object]
    public static let heading4xLargeMedium = [object Object]
    public static let heading4xLargeRegular = [object Object]
    public static let heading4xLargeSemibold = [object Object]
    public static let heading5xLargeBold = [object Object]
    public static let heading5xLargeMedium = [object Object]
    public static let heading5xLargeRegular = [object Object]
    public static let heading5xLargeSemibold = [object Object]
    public static let heading6xLargeBold = [object Object]
    public static let heading6xLargeMedium = [object Object]
    public static let heading6xLargeRegular = [object Object]
    public static let heading6xLargeSemibold = [object Object]
    public static let heading7xLargeBold = [object Object]
    public static let heading7xLargeMedium = [object Object]
    public static let heading7xLargeRegular = [object Object]
    public static let heading7xLargeSemibold = [object Object]
    public static let heading8xLargeBold = [object Object]
    public static let heading8xLargeMedium = [object Object]
    public static let heading8xLargeRegular = [object Object]
    public static let heading8xLargeSemibold = [object Object]
    public static let heading9xLargeBold = [object Object]
    public static let heading9xLargeMedium = [object Object]
    public static let heading9xLargeRegular = [object Object]
    public static let heading9xLargeSemibold = [object Object]
    public static let headingLargeBold = [object Object]
    public static let headingLargeMedium = [object Object]
    public static let headingLargeRegular = [object Object]
    public static let headingLargeSemibold = [object Object]
    public static let headingMediumBold = [object Object]
    public static let headingMediumMedium = [object Object]
    public static let headingMediumRegular = [object Object]
    public static let headingMediumSemibold = [object Object]
    public static let headingRegularBold = [object Object]
    public static let headingRegularMedium = [object Object]
    public static let headingRegularRegular = [object Object]
    public static let headingRegularSemibold = [object Object]
    public static let headingSmallBold = [object Object]
    public static let headingSmallMedium = [object Object]
    public static let headingSmallRegular = [object Object]
    public static let headingSmallSemibold = [object Object]
    public static let headingXLargeBold = [object Object]
    public static let headingXLargeMedium = [object Object]
    public static let headingXLargeRegular = [object Object]
    public static let headingXLargeSemibold = [object Object]
    public static let headingXSmallBold = [object Object]
    public static let headingXSmallMedium = [object Object]
    public static let headingXSmallRegular = [object Object]
    public static let headingXSmallSemibold = [object Object]
    public static let headingXxLargeBold = [object Object]
    public static let headingXxLargeMedium = [object Object]
    public static let headingXxLargeRegular = [object Object]
    public static let headingXxLargeSemibold = [object Object]
    public static let headingXxSmallBold = [object Object]
    public static let headingXxSmallMedium = [object Object]
    public static let headingXxSmallRegular = [object Object]
    public static let headingXxSmallSemibold = [object Object]
    public static let inter = Inter
    public static let labelMediumBold = [object Object]
    public static let labelMediumMedium = [object Object]
    public static let labelMediumRegular = [object Object]
    public static let labelMediumSemibold = [object Object]
    public static let labelRegularBold = [object Object]
    public static let labelRegularMedium = [object Object]
    public static let labelRegularRegular = [object Object]
    public static let labelRegularSemibold = [object Object]
    public static let labelSmallBold = [object Object]
    public static let labelSmallMedium = [object Object]
    public static let labelSmallRegular = [object Object]
    public static let labelSmallSemibold = [object Object]
    public static let labelXSmallBold = [object Object]
    public static let labelXSmallMedium = [object Object]
    public static let labelXSmallRegular = [object Object]
    public static let labelXSmallSemibold = [object Object]
    public static let labelXxSmallBold = [object Object]
    public static let labelXxSmallMedium = [object Object]
    public static let labelXxSmallRegular = [object Object]
    public static let labelXxSmallSemibold = [object Object]
    public static let large = roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    public static let largeLoose = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let largeNormal = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let largeTight = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let letterSpacing10xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing11xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing12xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing13xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing14xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing15xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing3xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing4xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing5xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing6xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing7xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing8xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacing9xLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacingA = -0.0223
    public static let letterSpacingB = 0.185
    public static let letterSpacingC = -0.1745
    public static let letterSpacingLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacingMedium = -0.0223 + 0.185 * (2.71828 ^ (roundTo(16 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacingRegular = -0.0223 + 0.185 * (2.71828 ^ (16 * -0.1745))
    public static let letterSpacingSmall = -0.0223 + 0.185 * (2.71828 ^ (roundTo(16 / 1.125 / 2,0) *2 * -0.1745))
    public static let letterSpacingXLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacingXSmall = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * -0.1745))
    public static let letterSpacingXxLarge = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * -0.1745))
    public static let letterSpacingXxSmall = -0.0223 + 0.185 * (2.71828 ^ (roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * -0.1745))
    public static let lightOnBackgroundInverseLarge = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundInverseMedium = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundInverseRegular = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundInverseSmall = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundInverseXLarge = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundInverseXSmall = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundInverseXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundLarge = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundMedium = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundRegular = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundSmall = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundXLarge = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundXSmall = [object Object],[object Object],[object Object]
    public static let lightOnBackgroundXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisMedium = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisRegular = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisXLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisXSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceHighEphasisXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseMedium = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseRegular = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseXLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseXSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceInverseXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseMedium = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseRegular = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseXLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseXSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisInverseXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisMedium = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisRegular = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisXLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisXSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceLowEmphasisXxLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceMedium = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceRegular = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceXLarge = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceXSmall = [object Object],[object Object],[object Object]
    public static let lightOnSurfaceXxLarge = [object Object],[object Object],[object Object]
    public static let lightPaletteBlue100 = #AAC7FC
    public static let lightPaletteBlue200 = #7FAAF7
    public static let lightPaletteBlue25 = #F2F6FE
    public static let lightPaletteBlue300 = #598DEF
    public static let lightPaletteBlue400 = #3672E2
    public static let lightPaletteBlue50 = #D3E2FE
    public static let lightPaletteBlue500 = #1E5BCC
    public static let lightPaletteBlue600 = #1248AC
    public static let lightPaletteBlue700 = #0A378B
    public static let lightPaletteBlue800 = #042768
    public static let lightPaletteBlue900 = #001233
    public static let lightPaletteCyan100 = #63D5F1
    public static let lightPaletteCyan200 = #28B8DC
    public static let lightPaletteCyan25 = #E5F9FE
    public static let lightPaletteCyan300 = #179BBD
    public static let lightPaletteCyan400 = #0D819F
    public static let lightPaletteCyan50 = #A2EBFC
    public static let lightPaletteCyan500 = #086B84
    public static let lightPaletteCyan600 = #05556A
    public static let lightPaletteCyan700 = #024253
    public static let lightPaletteCyan800 = #01303B
    public static let lightPaletteCyan900 = #01161B
    public static let lightPaletteGreen100 = #66E032
    public static let lightPaletteGreen200 = #4CC219
    public static let lightPaletteGreen25 = #E0FED3
    public static let lightPaletteGreen300 = #3CA40F
    public static let lightPaletteGreen400 = #308808
    public static let lightPaletteGreen50 = #9FF67A
    public static let lightPaletteGreen500 = #267004
    public static let lightPaletteGreen600 = #1C5B02
    public static let lightPaletteGreen700 = #174701
    public static let lightPaletteGreen800 = #0F3300
    public static let lightPaletteGreen900 = #071800
    public static let lightPaletteIndigo100 = #C6C1FD
    public static let lightPaletteIndigo200 = #A99FFB
    public static let lightPaletteIndigo25 = #F6F5FE
    public static let lightPaletteIndigo300 = #8C80F7
    public static let lightPaletteIndigo400 = #7061F1
    public static let lightPaletteIndigo50 = #E1DEFC
    public static let lightPaletteIndigo500 = #5646E8
    public static let lightPaletteIndigo600 = #3A2ADC
    public static let lightPaletteIndigo700 = #2717BC
    public static let lightPaletteIndigo800 = #180B91
    public static let lightPaletteIndigo900 = #090250
    public static let lightPaletteMagenta100 = #FDAAFC
    public static let lightPaletteMagenta200 = #F67AF6
    public static let lightPaletteMagenta25 = #FEF2FE
    public static let lightPaletteMagenta300 = #E846E8
    public static let lightPaletteMagenta400 = #CD1ECD
    public static let lightPaletteMagenta50 = #FED3FE
    public static let lightPaletteMagenta500 = #AB12AB
    public static let lightPaletteMagenta600 = #8C0A8C
    public static let lightPaletteMagenta700 = #6F056F
    public static let lightPaletteMagenta800 = #520252
    public static let lightPaletteMagenta900 = #2A0129
    public static let lightPaletteMoss100 = #A8D622
    public static let lightPaletteMoss200 = #8FB816
    public static let lightPaletteMoss25 = #ECFDB7
    public static let lightPaletteMoss300 = #779B0D
    public static let lightPaletteMoss400 = #628107
    public static let lightPaletteMoss50 = #CAEF59
    public static let lightPaletteMoss500 = #506A04
    public static let lightPaletteMoss600 = #405602
    public static let lightPaletteMoss700 = #324301
    public static let lightPaletteMoss800 = #243000
    public static let lightPaletteMoss900 = #111600
    public static let lightPaletteNeutral0 = #FFFFFF
    public static let lightPaletteNeutral100 = #C5C5C7
    public static let lightPaletteNeutral1000 = #000000
    public static let lightPaletteNeutral200 = #A9A9AB
    public static let lightPaletteNeutral25 = #F5F5F7
    public static let lightPaletteNeutral300 = #8F8F91
    public static let lightPaletteNeutral400 = #767678
    public static let lightPaletteNeutral50 = #DFDFE2
    public static let lightPaletteNeutral500 = #616163
    public static let lightPaletteNeutral600 = #4E4E50
    public static let lightPaletteNeutral700 = #3C3C3E
    public static let lightPaletteNeutral800 = #2C2B2E
    public static let lightPaletteNeutral900 = #131316
    public static let lightPalettePurple100 = #E7B3FC
    public static let lightPalettePurple200 = #D98CF9
    public static let lightPalettePurple25 = #FBF3FE
    public static let lightPalettePurple300 = #C763F1
    public static let lightPalettePurple400 = #B23CE5
    public static let lightPalettePurple50 = #F2D7FD
    public static let lightPalettePurple500 = #981FCD
    public static let lightPalettePurple600 = #7D12AB
    public static let lightPalettePurple700 = #630A89
    public static let lightPalettePurple800 = #490466
    public static let lightPalettePurple900 = #260035
    public static let lightPaletteRed100 = #FDB3B0
    public static let lightPaletteRed200 = #F88B85
    public static let lightPaletteRed25 = #FEF3F3
    public static let lightPaletteRed300 = #EF6058
    public static let lightPaletteRed400 = #DE362D
    public static let lightPaletteRed50 = #FED7D5
    public static let lightPaletteRed500 = #BE1F17
    public static let lightPaletteRed600 = #9D140D
    public static let lightPaletteRed700 = #7D0C06
    public static let lightPaletteRed800 = #5D0602
    public static let lightPaletteRed900 = #2F0300
    public static let lightPaletteRose100 = #FDB0CE
    public static let lightPaletteRose200 = #F886B3
    public static let lightPaletteRose25 = #FEF3F7
    public static let lightPaletteRose300 = #EF5895
    public static let lightPaletteRose400 = #DD2B71
    public static let lightPaletteRose50 = #FED7E6
    public static let lightPaletteRose500 = #BD1758
    public static let lightPaletteRose600 = #9B0D45
    public static let lightPaletteRose700 = #7C0635
    public static let lightPaletteRose800 = #5C0226
    public static let lightPaletteRose900 = #300013
    public static let lightPaletteTeal100 = #2DDEB1
    public static let lightPaletteTeal200 = #18C096
    public static let lightPaletteTeal25 = #D5FEF3
    public static let lightPaletteTeal300 = #0EA27C
    public static let lightPaletteTeal400 = #098667
    public static let lightPaletteTeal50 = #75F5D5
    public static let lightPaletteTeal500 = #056F54
    public static let lightPaletteTeal600 = #025943
    public static let lightPaletteTeal700 = #024634
    public static let lightPaletteTeal800 = #003225
    public static let lightPaletteTeal900 = #011712
    public static let lightPaletteViolet100 = #D5BBFC
    public static let lightPaletteViolet200 = #BE97FA
    public static let lightPaletteViolet25 = #F8F4FE
    public static let lightPaletteViolet300 = #A874F4
    public static let lightPaletteViolet400 = #9054EC
    public static let lightPaletteViolet50 = #E8DCFC
    public static let lightPaletteViolet500 = #7936E1
    public static let lightPaletteViolet600 = #621DCA
    public static let lightPaletteViolet700 = #4C10A7
    public static let lightPaletteViolet800 = #36077F
    public static let lightPaletteViolet900 = #1B0144
    public static let lightPaletteYellow100 = #F1BE60
    public static let lightPaletteYellow200 = #DD9E2A
    public static let lightPaletteYellow25 = #FEF5E4
    public static let lightPaletteYellow300 = #BE8317
    public static let lightPaletteYellow400 = #A06D0E
    public static let lightPaletteYellow50 = #FCDCA2
    public static let lightPaletteYellow500 = #845907
    public static let lightPaletteYellow600 = #6C4704
    public static let lightPaletteYellow700 = #553701
    public static let lightPaletteYellow800 = #3D2700
    public static let lightPaletteYellow900 = #1B1200
    public static let lineHeight10xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight10xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight10xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight11xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight11xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight11xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight12xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight12xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight12xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight13xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight13xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight13xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight14xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight14xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight14xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight15xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight15xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight15xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight3xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight3xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight3xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight4xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight4xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight4xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight5xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight5xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight5xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight6xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight6xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight6xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight7xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight7xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight7xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight8xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight8xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight8xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeight9xLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeight9xLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeight9xLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightLargeLoose = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightLargeNormal = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightLargeTight = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightMediumLoose = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightMediumNormal = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightMediumTight = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightRegularLoose = roundTo(16 * 1.7 / 4,0) * 4
    public static let lineHeightRegularNormal = roundTo(16 * 1.5 / 4,0) * 4
    public static let lineHeightRegularTight = roundTo(16 * 1.2 / 4,0) * 4
    public static let lineHeightScaleLoose = 1.7
    public static let lineHeightScaleNormal = 1.5
    public static let lineHeightScaleTight = 1.2
    public static let lineHeightSmallLoose = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightSmallNormal = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightSmallTight = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightXLargeLoose = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightXLargeNormal = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightXLargeTight = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightXSmallLoose = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightXSmallNormal = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightXSmallTight = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightXxLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightXxLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightXxLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let lineHeightXxSmallLoose = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    public static let lineHeightXxSmallNormal = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    public static let lineHeightXxSmallTight = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    public static let lineThrough = line-through
    public static let lowercase = lowercase
    public static let mask = 200
    public static let medium = roundTo(16 * 1.5 /2,0) *2
    public static let mediumLoose = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let mediumNormal = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let mediumTight = roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let modal = 800
    public static let navigation = 400
    public static let none = 0
    public static let opacity100 = 0.21
    public static let opacity200 = 0.29
    public static let opacity25 = 0.05
    public static let opacity300 = 0.37
    public static let opacity400 = 0.46
    public static let opacity50 = 0.13
    public static let opacity500 = 0.54
    public static let opacity600 = 0.64
    public static let opacity700 = 0.73
    public static let opacity800 = 0.83
    public static let opacity900 = 0.94
    public static let overlay = 500
    public static let paletteBlue100 = #062F7C
    public static let paletteBlue200 = #0F42A3
    public static let paletteBlue25 = #000E26
    public static let paletteBlue300 = #1B57C7
    public static let paletteBlue400 = #3370E0
    public static let paletteBlue50 = #011E53
    public static let paletteBlue500 = #5388EC
    public static let paletteBlue600 = #75A2F5
    public static let paletteBlue700 = #99BBFA
    public static let paletteBlue800 = #BED4FD
    public static let paletteBlue900 = #EAF1FD
    public static let paletteCyan100 = #023A47
    public static let paletteCyan200 = #045064
    public static let paletteCyan25 = #000F13
    public static let paletteCyan300 = #07667F
    public static let paletteCyan400 = #0D7F9C
    public static let paletteCyan50 = #002730
    public static let paletteCyan500 = #1697B9
    public static let paletteCyan600 = #22B0D4
    public static let paletteCyan700 = #49C9E9
    public static let paletteCyan800 = #83E1F8
    public static let paletteCyan900 = #D7F6FE
    public static let paletteGreen100 = #133D00
    public static let paletteGreen200 = #1A5402
    public static let paletteGreen25 = #051100
    public static let paletteGreen300 = #246C04
    public static let paletteGreen400 = #2E8508
    public static let paletteGreen50 = #0D2701
    public static let paletteGreen500 = #399E0D
    public static let paletteGreen600 = #46B916
    public static let paletteGreen700 = #56D321
    public static let paletteGreen800 = #7EEB50
    public static let paletteGreen900 = #CEFEBA
    public static let paletteIndigo100 = #1E10A7
    public static let paletteIndigo100 = #C6C1FD
    public static let paletteIndigo200 = #3222D4
    public static let paletteIndigo200 = #A99FFB
    public static let paletteIndigo25 = #070142
    public static let paletteIndigo25 = #F6F5FE
    public static let paletteIndigo300 = #503FE6
    public static let paletteIndigo300 = #8C80F7
    public static let paletteIndigo400 = #6C5DF0
    public static let paletteIndigo400 = #7061F1
    public static let paletteIndigo50 = #120677
    public static let paletteIndigo50 = #E1DEFC
    public static let paletteIndigo500 = #867AF5
    public static let paletteIndigo500 = #5646E8
    public static let paletteIndigo600 = #A096F9
    public static let paletteIndigo600 = #3A2ADC
    public static let paletteIndigo700 = #B9B2FC
    public static let paletteIndigo700 = #2717BC
    public static let paletteIndigo800 = #D2CEFE
    public static let paletteIndigo800 = #180B91
    public static let paletteIndigo900 = #F1EFFD
    public static let paletteIndigo900 = #090250
    public static let paletteMagenta100 = #620362
    public static let paletteMagenta200 = #830883
    public static let paletteMagenta25 = #1E011E
    public static let paletteMagenta300 = #A510A5
    public static let paletteMagenta400 = #C91DC9
    public static let paletteMagenta50 = #430143
    public static let paletteMagenta500 = #E53DE5
    public static let paletteMagenta600 = #F36CF3
    public static let paletteMagenta700 = #FA96FA
    public static let paletteMagenta800 = #FDBEFD
    public static let paletteMagenta900 = #FDEBFD
    public static let paletteMoss100 = #2B3A00
    public static let paletteMoss200 = #3B5002
    public static let paletteMoss25 = #1C2501
    public static let paletteMoss300 = #4D6604
    public static let paletteMoss400 = #607E07
    public static let paletteMoss50 = #1C2501
    public static let paletteMoss500 = #73960C
    public static let paletteMoss600 = #88AF13
    public static let paletteMoss700 = #9DC91C
    public static let paletteMoss800 = #B8E237
    public static let paletteMoss900 = #E2FB99
    public static let paletteNeutral0 = #000000
    public static let paletteNeutral100 = #353537
    public static let paletteNeutral1000 = #FFFFFF
    public static let paletteNeutral200 = #49494B
    public static let paletteNeutral25 = #0D0D10
    public static let paletteNeutral300 = #5E5E60
    public static let paletteNeutral400 = #747476
    public static let paletteNeutral50 = #222224
    public static let paletteNeutral500 = #8A8A8D
    public static let paletteNeutral600 = #A2A2A5
    public static let paletteNeutral700 = #BABABC
    public static let paletteNeutral800 = #D3D3D5
    public static let paletteNeutral900 = #F0F0F3
    public static let palettePurple100 = #57067A
    public static let palettePurple200 = #750EA1
    public static let palettePurple25 = #1E002A
    public static let palettePurple300 = #931CC7
    public static let palettePurple400 = #AF38E3
    public static let palettePurple50 = #3B0253
    public static let palettePurple500 = #C35DF0
    public static let palettePurple600 = #D480F7
    public static let palettePurple700 = #E2A2FC
    public static let palettePurple800 = #EDC5FE
    public static let palettePurple900 = #F8ECFD
    public static let paletteRed100 = #6D0A04
    public static let paletteRed200 = #93120B
    public static let paletteRed25 = #240300
    public static let paletteRed300 = #B81D16
    public static let paletteRed400 = #DC3028
    public static let paletteRed50 = #4B0501
    public static let paletteRed500 = #EC5A51
    public static let paletteRed600 = #F67F79
    public static let paletteRed700 = #FCA39E
    public static let paletteRed800 = #FEC5C2
    public static let paletteRed900 = #FEECEC
    public static let paletteRose100 = #6D052E
    public static let paletteRose200 = #910B40
    public static let paletteRose25 = #24000E
    public static let paletteRose300 = #B61554
    public static let paletteRose400 = #DB256D
    public static let paletteRose50 = #4B011E
    public static let paletteRose500 = #EC518F
    public static let paletteRose600 = #F679AB
    public static let paletteRose700 = #FC9EC3
    public static let paletteRose800 = #FEC3DA
    public static let paletteRose900 = #FEECF3
    public static let paletteTeal100 = #013D2E
    public static let paletteTeal200 = #02543F
    public static let paletteTeal25 = #00110D
    public static let paletteTeal300 = #056B52
    public static let paletteTeal400 = #088465
    public static let paletteTeal50 = #02281E
    public static let paletteTeal500 = #0D9D79
    public static let paletteTeal600 = #16B78F
    public static let paletteTeal700 = #21D2A6
    public static let paletteTeal800 = #50EBC5
    public static let paletteTeal900 = #BCFDED
    public static let paletteViolet100 = #420C94
    public static let paletteViolet200 = #5A18BF
    public static let paletteViolet25 = #160039
    public static let paletteViolet300 = #7530DF
    public static let paletteViolet400 = #8E50EB
    public static let paletteViolet50 = #2B0467
    public static let paletteViolet500 = #A46EF3
    public static let paletteViolet600 = #B88DF9
    public static let paletteViolet700 = #CBACFC
    public static let paletteViolet800 = #DFCAFE
    public static let paletteViolet900 = #F4EEFD
    public static let paletteYellow100 = #4A3001
    public static let paletteYellow200 = #644203
    public static let paletteYellow25 = #130D00
    public static let paletteYellow300 = #7F5606
    public static let paletteYellow400 = #9C6A0D
    public static let paletteYellow50 = #2F1E00
    public static let paletteYellow500 = #B97F16
    public static let paletteYellow600 = #D69622
    public static let paletteYellow700 = #E9B149
    public static let paletteYellow800 = #F7CD7E
    public static let paletteYellow900 = #FEEFD3
    public static let paragraphLargeBold = [object Object]
    public static let paragraphLargeMedium = [object Object]
    public static let paragraphLargeRegular = [object Object]
    public static let paragraphLargeSemibold = [object Object]
    public static let paragraphMediumBold = [object Object]
    public static let paragraphMediumMedium = [object Object]
    public static let paragraphMediumRegular = [object Object]
    public static let paragraphMediumSemibold = [object Object]
    public static let paragraphRegularBold = [object Object]
    public static let paragraphRegularMedium = [object Object]
    public static let paragraphRegularRegular = [object Object]
    public static let paragraphRegularSemibold = [object Object]
    public static let paragraphSmallBold = [object Object]
    public static let paragraphSmallMedium = [object Object]
    public static let paragraphSmallRegular = [object Object]
    public static let paragraphSmallSemibold = [object Object]
    public static let paragraphSpacing10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing11xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing12xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing13xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing14xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing15xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacing9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingLarge = roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingMedium = roundTo(roundTo(16 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingRegular = roundTo(16 * 0.75 / 1,0) *1
    public static let paragraphSpacingScale = 0.75
    public static let paragraphSpacingSmall = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingXLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingXSmall = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingXxLarge = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphSpacingXxSmall = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 0.75 / 1,0) *1
    public static let paragraphXLargeBold = [object Object]
    public static let paragraphXLargeMedium = [object Object]
    public static let paragraphXLargeRegular = [object Object]
    public static let paragraphXLargeSemibold = [object Object]
    public static let paragraphXSmallBold = [object Object]
    public static let paragraphXSmallMedium = [object Object]
    public static let paragraphXSmallRegular = [object Object]
    public static let paragraphXSmallSemibold = [object Object]
    public static let paragraphXxLargeBold = [object Object]
    public static let paragraphXxLargeMedium = [object Object]
    public static let paragraphXxLargeRegular = [object Object]
    public static let paragraphXxLargeSemibold = [object Object]
    public static let paragraphXxSmallBold = [object Object]
    public static let paragraphXxSmallMedium = [object Object]
    public static let paragraphXxSmallRegular = [object Object]
    public static let paragraphXxSmallSemibold = [object Object]
    public static let popout = 700
    public static let quickly = 0.05s ease
    public static let regular = 16
    public static let regularLoose = roundTo(16 * 1.7 / 4,0) * 4
    public static let regularNormal = roundTo(16 * 1.5 / 4,0) * 4
    public static let regularTight = roundTo(16 * 1.2 / 4,0) * 4
    public static let scale = 1.5
    public static let scaleLoose = 1.7
    public static let scaleNormal = 1.5
    public static let scaleTight = 1.2
    public static let semibold = Semi Bold
    public static let size10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size3xSmall = roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) /2,0) *2
    public static let size4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let size9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let sizeFontBase = CGFloat(16.00) /* the base size of the font */
    public static let sizeFontLarge = CGFloat(32.00) /* the large size of the font */
    public static let sizeFontMedium = CGFloat(16.00) /* the medium size of the font */
    public static let sizeFontSmall = CGFloat(12.00) /* the small size of the font */
    public static let sizeLarge = roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let sizeMedium = roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2
    public static let sizeRegular = CGFloat(256.00)
    public static let sizeScale = CGFloat(19.20)
    public static let sizeSmall = roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2
    public static let sizeXLarge = roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let sizeXSmall = roundTo(roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let sizeXxLarge = roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let sizeXxSmall = roundTo(roundTo(roundTo(CGFloat(256.00) / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let small = roundTo(16 / 1.5 / 2,0) *2
    public static let smallLoose = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    public static let smallNormal = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    public static let smallTight = roundTo(roundTo(16 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    public static let space10xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space3xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space3xSmall = roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let space4xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space4xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let space5xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space5xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2
    public static let space6xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space6xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2
    public static let space7xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space7xSmall = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 2,0) *2 / 2*CGFloat(19.20) / 1,0) *1
    public static let space8xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let space9xLarge = roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let spaceLarge = roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let spaceMedium = roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2
    public static let spaceNone = 0
    public static let spaceRegular = 16
    public static let spaceSmall = roundTo(16 / CGFloat(19.20) / 2,0) *2
    public static let spaceXLarge = roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let spaceXSmall = roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let spaceXxLarge = roundTo(roundTo(roundTo(roundTo(CGFloat(256.00) * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2 * CGFloat(19.20) /2,0) *2
    public static let spaceXxSmall = roundTo(roundTo(roundTo(16 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2 / CGFloat(19.20) / 2,0) *2
    public static let spinner = 600
    public static let sticky = 300
    public static let textCaseCapitalize = capitalize
    public static let textCaseLowercase = lowercase
    public static let textCaseNone = none
    public static let textCaseUppercase = uppercase
    public static let textDecorationLineThrough = line-through
    public static let textDecorationNone = none
    public static let textDecorationUnderline = underline
    public static let toast = 900
    public static let underline = underline
    public static let uppercase = uppercase
    public static let white100 = rgba(#FFFFFF, 0.21)
    public static let white200 = rgba(#FFFFFF, 0.29)
    public static let white25 = rgba(#FFFFFF, 0.05)
    public static let white300 = rgba(#FFFFFF, 0.37)
    public static let white400 = rgba(#FFFFFF, 0.46)
    public static let white50 = rgba(#FFFFFF, 0.13)
    public static let white500 = rgba(#FFFFFF, 0.54)
    public static let white600 = rgba(#FFFFFF, 0.64)
    public static let white700 = rgba(#FFFFFF, 0.73)
    public static let white800 = rgba(#FFFFFF, 0.83)
    public static let white900 = rgba(#FFFFFF, 0.94)
    public static let xLarge = roundTo(roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    public static let xLargeLoose = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let xLargeNormal = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let xLargeTight = roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let xSmall = roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    public static let xSmallLoose = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    public static let xSmallNormal = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    public static let xSmallTight = roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    public static let xxLarge = roundTo(roundTo(roundTo(roundTo(16 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2 * 1.5 /2,0) *2
    public static let xxLargeLoose = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.7 / 4,0) * 4
    public static let xxLargeNormal = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.5 / 4,0) * 4
    public static let xxLargeTight = roundTo(roundTo(roundTo(roundTo(roundTo(16 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.125 /2,0) *2 * 1.2 / 4,0) * 4
    public static let xxSmall = roundTo(roundTo(roundTo(16 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2 / 1.5 / 2,0) *2
    public static let xxSmallLoose = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.7 / 4,0) * 4
    public static let xxSmallNormal = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.5 / 4,0) * 4
    public static let xxSmallTight = roundTo(roundTo(roundTo(roundTo(16 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 / 1.125 / 2,0) *2 * 1.2 / 4,0) * 4
    public static let zIndexDeep = -999999
    public static let zIndexDefault = 1
    public static let zIndexDocked = 100
    public static let zIndexMask = 200
    public static let zIndexModal = 800
    public static let zIndexNavigation = 400
    public static let zIndexOverlay = 500
    public static let zIndexPopout = 700
    public static let zIndexSpinner = 600
    public static let zIndexSticky = 300
    public static let zIndexToast = 900
}
